version: 2.1

executors:
  android-executor:
    docker:
      - image: circleci/android:api-30
    working_directory: ~/detective
    environment:
      JAVA_TOOL_OPTIONS: "-Xmx2048m"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      TERM: dumb

references:
  android_dependencies: &android_dependencies
    run:
      name: Download Android Dependencies
      command: ./gradlew androidDependencies

  gradle_key: &gradle_key
    gradle-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "gradle/libs.versions.toml" }}

  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: *gradle_key

  save_gradle_cache: &save_gradle_cache
    save_cache:
      key: *gradle_key
      paths:
        - ~/.gradle

  gems_key: &gems_key
    gems-{{ checksum "Gemfile.lock" }}

  restore_gems_cache: &restore_gems_cache
    restore_cache:
      key: *gems_key

  save_gems_cache: &save_gems_cache
    save_cache:
      key: *gems_key
      paths:
        - vendor/bundle

  ruby_dependencies: &ruby_dependencies
    run:
      name: Download Ruby Dependencies
      command: bundle check || bundle install --path vendor/bundle

  signing_configs_setup: &signing_configs_setup
    run: 
      name: Setup Signing Configs
      command: release/signing-setup.sh $KEYSTORE_DECRYPTION_PWD
  
  signing_configs_cleanup: &signing_configs_cleanup
    run: 
      name: Cleanup Signing Configs
      command: release/signing-cleanup.sh
      when: always

jobs:
  build:
    executor: android-executor
    steps:
      - checkout
      - *restore_gradle_cache
      - *signing_configs_setup
      - *android_dependencies
      - run:
          name: Run JVM Tests & Lint, assemble app and test APKs for debug and release
          command: ./gradlew check assemble assembleAndroidTest --stacktrace
      - *signing_configs_cleanup
      # Persist build directory for all modules
      - persist_to_workspace:
          root: .
          paths:
            - build
            - ./**/build
      - *save_gradle_cache

  test:
    executor: android-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - *restore_gradle_cache
      - *signing_configs_setup
      - *android_dependencies
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Code Climate pre-build
          command: ./cc-test-reporter before-build
      - run:
          name: Run Unit Tests
          command: ./gradlew test
      - run:
          name: Save Unit Test Results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - run:
          name: Run Jacoco Test Coverage
          command: ./gradlew testReleaseUnitTestCoverage
      - run:
          name: Upload test coverage report to Code Climate
          command: |
            JACOCO_SOURCE_PATH=app/src/main/java \
            ./cc-test-reporter format-coverage -d -t jacoco app/build/reports/jacoco/testReleaseUnitTestCoverage/testReleaseUnitTestCoverage.xml
            ./cc-test-reporter upload-coverage -d
      - *signing_configs_cleanup
      - *save_gradle_cache

  release:
    executor: android-executor
    steps:
      - run:
          name: Verify PR owner
          command: |
            if [ "$CIRCLE_USERNAME" != "michaelcarrano" ]; then
              circleci-agent step halt
            fi
      - checkout
      - *restore_gems_cache
      - *ruby_dependencies
      - *save_gems_cache
      - *restore_gradle_cache
      - *signing_configs_setup
      - *android_dependencies
      - run:
          name: Build Release App and Upload to Google Play
          command: bundle exec fastlane release
      - *signing_configs_cleanup

#  libraries:
#    executor: android-executor
#    steps:
#      - checkout
#      - *restore_gems_cache
#      - *ruby_dependencies
#      - *save_gems_cache
#      - run:
#          name: Updating libraries
#          command: bundle exec fastlane release_library_updates

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build

  release_to_google:
    jobs:
      - build:
          filters:
            branches:
              only: /release-.*/
      - release:
          requires:
            - build
          filters:
            branches:
              only: /release-.*/

#  update_libraries:
#    triggers:
#      - schedule:
#          cron: "0 0 * * 0" # Every week on Sunday
#          filters:
#            branches:
#              only:
#                - main
#    jobs:
#      - libraries